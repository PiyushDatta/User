// Place your key bindings in this file to override the defaults
[
    // going back and forth between tabs
    {
        "key": "alt+w",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "alt+q",
        "command": "workbench.action.previousEditor"
    },
    // jump to definition
    {
        "key": "alt+enter",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    // ctrl-f for find
    {
        "key": "alt+f",
        "command": "actions.find",
    },
    {
        "key": "ctrl+f",
        "command": "actions.find",
    },
    // word right and left
    {
        "key": "alt+right",
        "command": "cursorWordAccessibilityRight",
    },
    {
        "key": "ctrl+right",
        "command": "cursorWordAccessibilityRight",
    },
    {
        "key": "alt+left",
        "command": "cursorWordAccessibilityLeft",
    },
    {
        "key": "ctrl+left",
        "command": "cursorWordAccessibilityLeft",
    },
    // go up and back paragraphs
    {
        "key": "alt+up",
        "command": "spaceBlockJumper.moveUp"
    },
    {
        "key": "alt+down",
        "command": "spaceBlockJumper.moveDown"
    },
    {
        "key": "ctrl+up",
        "command": "spaceBlockJumper.moveUp"
    },
    {
        "key": "ctrl+down",
        "command": "spaceBlockJumper.moveDown"
    },
    // go to beg/end of line
    {
        "key": "alt+d",
        "command": "cursorLineStart"
    },
    {
        "key": "ctrl+d",
        "command": "cursorLineStart"
    },
    {
        "key": "alt+e",
        "command": "cursorLineEnd"
    },
    {
        "key": "ctrl+e",
        "command": "cursorLineEnd"
    },
    // make copy/cut/paste/undo/redo for alt key as well
    {
        "key": "alt+v",
        "command": "editor.action.clipboardPasteAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+v",
        "command": "editor.action.clipboardPasteAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+c",
        "command": "editor.action.clipboardCopyAction",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+c",
        "command": "editor.action.clipboardCopyAction",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+x",
        "command": "editor.action.clipboardCutAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+z",
        "command": "undo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+z",
        "command": "undo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+y",
        "command": "redo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+y",
        "command": "redo",
        "when": "textInputFocus && !editorReadonly"
    },
    // save
    {
        "key": "alt+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.files.save"
    },
    // select entire line
    {
        "key": "alt+r",
        "command": "expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "expandLineSelection",
        "when": "textInputFocus"
    },
    // comment and uncomment code
    {
        "key": "alt+/",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+/",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    // close current window/tab
    {
        "key": "ctrl+x k",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+shift+alt+x",
        "command": "workbench.view.extensions"
    },
    {
        "key": "ctrl+shift+x",
        "command": "filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    // M-x (show all commands/command pallete)
    {
        "key": "escape x",
        "command": "workbench.action.showCommands",
    },
    // select all
    {
        "key": "alt+a",
        "command": "editor.action.selectAll",
        "when": "textInputFocus"
    },
    // select words going right
    {
        "key": "alt+shift+right",
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus"
    },
    // select words going left
    {
        "key": "alt+shift+left",
        "command": "cursorWordEndLeftSelect",
        "when": "textInputFocus"
    },
    // escape multiple cursors
    {
        "key": "ctrl+g",
        "command": "removeSecondaryCursors",
        "when": "editorHasMultipleSelections && textInputFocus"
    },
    {
        "key": "alt+g",
        "command": "removeSecondaryCursors",
        "when": "editorHasMultipleSelections && textInputFocus"
    },
    // toggle sidebar/treemenu
    {
        "key": "ctrl+x t",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    // toggle activity bar (the one with search extensions)
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+x r",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
]